{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\narth\\\\OneDrive\\\\Desktop\\\\QR_generator\\\\project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Img from './qrimg.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // parameters\n  const [img, setimg] = useState(Img);\n  const [load, setload] = useState(false);\n  const [qrdata, setqrdata] = useState(\"\");\n  const [size, setSize] = useState(150);\n  function Qr_gen() {\n    try {\n      setload(true);\n      const url = `https://api.qrserver.com/v1/create-qr-code/?data=${encodeURIComponent(qrdata)}&size=${size}x${size}`;\n      setimg(url);\n    } catch (error) {\n      console.log(\"Error occurs while gendrating the Qr-Code\");\n    } finally {\n      setload(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"QR Code Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), load && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"please wait\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: img,\n      alt: \"qr-box\",\n      className: \"QR-img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"input-label\",\n      children: \"Data for QR-Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"data-input\",\n      placeholder: \"Enter data for Qr code\",\n      onChange: e => setqrdata(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"input-label\",\n      children: \"ImageSize(eg:150)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"sizeinput\",\n      placeholder: \"Enter image size\",\n      onChange: e => setSize(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"gen-btn\",\n      onClick: Qr_gen,\n      target: \"_blank\",\n      children: \"Gendrate QR-Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"download\",\n      onClick: () => {\n        const link = document.createElement('a');\n        link.href = img;\n        link.download = 'code.png';\n        link.click();\n      },\n      children: \"Download Your QR Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"BhSaXJiALieaVaB6X6vuh1m3e5w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Img","jsxDEV","_jsxDEV","App","_s","img","setimg","load","setload","qrdata","setqrdata","size","setSize","Qr_gen","url","encodeURIComponent","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","className","type","id","placeholder","onChange","e","target","value","onClick","link","document","createElement","href","download","click","_c","$RefreshReg$"],"sources":["C:/Users/narth/OneDrive/Desktop/QR_generator/project/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\nimport Img from'./qrimg.jpeg';\nconst App = () => {\n  // parameters\n  const[img,setimg]=useState(Img);\n  const[load,setload]=useState(false);\n  const[qrdata,setqrdata]=useState(\"\");\n  const[size,setSize]=useState(150);\n\n  function Qr_gen()\n  {\n  try{\n       setload(true);\n       const url=`https://api.qrserver.com/v1/create-qr-code/?data=${encodeURIComponent(qrdata)}&size=${size}x${size}`;\n       setimg(url);\n  }\n  catch(error){\n    console.log(\"Error occurs while gendrating the Qr-Code\")\n  }\n  finally{\n    setload(false);\n  }\n}\n  return (\n    <div>\n      <h1>QR Code Generator</h1>\n      {/* conditional renderring */}\n      {load && <p>please wait</p>}\n      <img src={img}  alt ='qr-box' className='QR-img'></img>\n\n      <label className='input-label'>Data for QR-Code</label>\n      <input type=\"text\" id=\"data-input\" placeholder='Enter data for Qr code' onChange={(e)=>setqrdata(e.target.value)}></input>\n      <label className='input-label'>\n        ImageSize(eg:150)\n      </label>\n      <input type=\"text\" id=\"sizeinput\" placeholder='Enter image size' onChange={(e)=>setSize(e.target.value)}></input>\n      <button className=\"gen-btn\" onClick={Qr_gen} target=\"_blank\">Gendrate QR-Code</button>\n      <button\n        className=\"download\"\n        onClick={() => {\n          const link = document.createElement('a');\n          link.href = img;\n          link.download = 'code.png';\n          link.click();\n        }}\n      >\n        Download Your QR Code\n      </button>\n      \n    </div>\n  )\n}\n\nexport default App"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}